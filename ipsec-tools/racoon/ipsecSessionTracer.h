/*
 * Copyright (c) 2008 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 * 
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */

#ifndef _IPSECSESSIONTRACER_H
#define _IPSECSESSIONTRACER_H

typedef enum ipsecSessionEventCode {
	IPSECSESSIONEVENTCODE_NONE = 0,
	IPSECSESSIONEVENTCODE_IKE_PACKET_TX_SUCC,
	IPSECSESSIONEVENTCODE_IKE_PACKET_TX_FAIL,
	IPSECSESSIONEVENTCODE_IKE_PACKET_RX_SUCC,
	IPSECSESSIONEVENTCODE_IKE_PACKET_RX_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_INIT_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_INIT_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_INIT_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_RESP_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_RESP_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_RESP_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_MAX_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_AUTH_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH1_AUTH_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_INIT_REQ,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_INIT_RESP,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_INIT_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_RESP_REQ,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_RESP_RESP,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_RESP_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_DPD_MAX_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_CFG_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_MODECFG_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_MODECFG_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_MODECFG_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_XAUTH_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_XAUTH_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_XAUTH_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_INIT_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_INIT_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_INIT_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_RESP_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_RESP_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_RESP_DROP,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_MAX_RETRANSMIT,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_AUTH_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_PH2_AUTH_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_INFO_NOTICE_TX_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_INFO_NOTICE_TX_FAIL,
	IPSECSESSIONEVENTCODE_IKEV1_INFO_NOTICE_RX_SUCC,
	IPSECSESSIONEVENTCODE_IKEV1_INFO_NOTICE_RX_FAIL,
	IPSECSESSIONEVENTCODE_MAX,
} ipsecSessionEventCode_t;

const char * ipsecSessionEventCodeToString (ipsecSessionEventCode_t);
void ipsecSessionTracerStart (ike_session_t *);
void ipsecSessionTracerEvent (ike_session_t *, ipsecSessionEventCode_t, const char *, const char *);
void ipsecSessionTracerStop (ike_session_t *, int, const char *);
void ipsecSessionTracerLogEstablished (ike_session_t *session);

#endif /* _IPSECSESSIONTRACER_H */
